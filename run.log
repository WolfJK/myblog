*** Starting uWSGI 2.0.18 (64bit) on [Mon May 11 14:15:11 2020] ***
compiled with version: 7.3.0 on 09 February 2019 23:40:56
os: Linux-4.18.0-147.8.1.el8_1.x86_64 #1 SMP Thu Apr 9 13:49:54 UTC 2020
nodename: instance-8hcz4g0t
machine: x86_64
clock source: unix
pcre jit disabled
detected number of CPU cores: 1
current working directory: /root/project/myblog
writing pidfile to uwsgi.pid
detected binary path: /opt/anaconda/envs/python3/bin/uwsgi
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /root/project/myblog
your processes number limit is 3814
your memory page size is 4096 bytes
detected max file descriptor number: 65535
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8978 fd 6
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.7 | packaged by conda-forge | (default, Nov 21 2018, 03:09:43)  [GCC 7.3.0]
Python main interpreter initialized at 0x5617ef1f5010
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 416880 bytes (407 KB) for 8 cores
*** Operational MODE: preforking+threaded ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x5617ef1f5010 pid: 30200 (default app)
mountpoint  already configured. skip.
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 30200)
spawned uWSGI worker 1 (pid: 30202, cores: 2)
spawned uWSGI worker 2 (pid: 30203, cores: 2)
spawned uWSGI worker 3 (pid: 30204, cores: 2)
spawned uWSGI worker 4 (pid: 30205, cores: 2)
[11/May/2020 14:15:13] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:15:13] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:16:11] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:16:11] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:28:28] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:28:28] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:35:47] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:35:47] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:41:40] [base.py] [line:93] WARNING 
 Not Found: /favicon.ico
[11/May/2020 14:41:57] [base.py] [line:93] WARNING 
 Not Found: /project/myblog/static/css/base.css
[11/May/2020 14:52:45] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:52:45] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:52:47] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 14:52:47] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 14:52:47] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:52:47] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:52:47] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 14:52:47] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 14:52:47] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 14:52:47] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:53:04] [views.py] [line:217] INFO 
 ['COOKIES', 'FILES', 'GET', 'META', 'POST', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_body', '_encoding', '_files', '_get_post', '_get_raw_host', '_get_scheme', '_initialize_handlers', '_load_post_and_files', '_mark_post_parse_error', '_messages', '_post', '_post_parse_error', '_read_started', '_set_post', '_stream', '_upload_handlers', 'body', 'build_absolute_uri', 'close', 'content_params', 'content_type', 'csrf_processing_done', 'encoding', 'environ', 'get_full_path', 'get_host', 'get_port', 'get_raw_uri', 'get_signed_cookie', 'is_ajax', 'is_secure', 'method', 'parse_file_upload', 'path', 'path_info', 'read', 'readline', 'readlines', 'resolver_match', 'scheme', 'session', 'upload_handlers', 'user', 'xreadlines']
**********
hello 11 1 1 1 0
[11/May/2020 14:53:08] [views.py] [line:217] INFO 
 ['COOKIES', 'FILES', 'GET', 'META', 'POST', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_body', '_encoding', '_files', '_get_post', '_get_raw_host', '_get_scheme', '_initialize_handlers', '_load_post_and_files', '_mark_post_parse_error', '_messages', '_post', '_post_parse_error', '_read_started', '_set_post', '_stream', '_upload_handlers', 'body', 'build_absolute_uri', 'close', 'content_params', 'content_type', 'csrf_processing_done', 'encoding', 'environ', 'get_full_path', 'get_host', 'get_port', 'get_raw_uri', 'get_signed_cookie', 'is_ajax', 'is_secure', 'method', 'parse_file_upload', 'path', 'path_info', 'read', 'readline', 'readlines', 'resolver_match', 'scheme', 'session', 'upload_handlers', 'user', 'xreadlines']
**********
hello 1 1 1 1 0
[11/May/2020 14:53:08] [views.py] [line:247] INFO 
 {'code': 0, 'msg': '注册成功'}
[11/May/2020 14:53:15] [views.py] [line:267] INFO 
 LoginView.post()
========== hello 1 hello
[11/May/2020 14:53:15] [views.py] [line:279] INFO 
 {'code': 0, 'msg': '登录成功'}
[11/May/2020 14:53:15] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:53:15] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:53:15] [views.py] [line:89] INFO 
 /searchArticles()
[11/May/2020 14:53:15] [views.py] [line:115] INFO 
 /searchRecommend()
 8 1
[11/May/2020 14:53:15] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:53:15] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:53:15] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 14:53:15] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 14:53:15] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 14:53:15] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:53:54] [views.py] [line:177] INFO 
 searchComment()
[11/May/2020 14:53:56] [views.py] [line:137] INFO 
 addLike()
********** 2
[11/May/2020 14:53:56] [views.py] [line:177] INFO 
 searchComment()
[11/May/2020 14:55:41] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:55:41] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:55:42] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 14:55:42] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 14:55:42] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:55:42] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:55:42] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 14:55:42] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 14:55:42] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 14:55:42] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:59:49] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 14:59:49] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:59:50] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 14:59:50] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 14:59:50] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 14:59:50] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 14:59:50] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 14:59:50] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 14:59:50] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 14:59:50] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:01:31] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 15:01:31] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:01:31] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 15:01:32] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 15:01:32] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:01:32] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:01:32] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 15:01:32] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 15:01:32] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 15:01:32] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:03:05] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 15:03:05] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:03:05] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 15:03:05] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 15:03:05] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:03:05] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:03:05] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 15:03:05] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 15:03:05] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 15:03:05] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:03:06] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 15:03:06] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:03:06] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 15:03:06] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 15:03:06] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:03:06] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 15:03:06] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 15:03:06] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 15:03:06] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 15:03:23] [views.py] [line:89] INFO 
 /searchArticles()
 8 2
[11/May/2020 15:03:23] [views.py] [line:39] INFO 
 page_def()
[1, 2] 2 ---- [1, 2] 3 s==============
<a href="javascript:" class="pageginator" page="1">上一页</a><a href="javascript:" class="pageginator page-item" page="1">第1页</a><a href="javascript:" class="pageginator page-item" style="color:blue;" page="2">第2页</a>
[11/May/2020 15:03:23] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/7">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 15:03:23] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/8">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 15:03:23] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/1">title</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">content</div><i></i></li>
[11/May/2020 15:06:31] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 15:06:31] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 16:40:31] [views.py] [line:77] INFO 
 /index()
********** ['AbstractUser', 'Article', 'Comment', 'CommonModels', 'MyUser', 'User', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'models', 'settings']
[11/May/2020 16:40:31] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 16:40:31] [views.py] [line:115] INFO 
 /searchRecommend()
[11/May/2020 16:40:31] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 16:40:31] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 16:40:31] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:40:31] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 16:40:31] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 16:40:31] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 16:40:31] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:40:44] [views.py] [line:89] INFO 
 /searchArticles()
认证 2 1
[11/May/2020 16:40:44] [views.py] [line:39] INFO 
 page_def()
[1] 1 ---- [1] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a>
[11/May/2020 16:40:44] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:40:44] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:41:14] [views.py] [line:89] INFO 
 /searchArticles()
 8 1
[11/May/2020 16:41:14] [views.py] [line:39] INFO 
 page_def()
[1, 2] 1 ---- [2] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a><a href="javascript:" class="pageginator page-item" page="2">第2页</a><a href="javascript:" class="pageginator" page="2">下一页</a>
[11/May/2020 16:41:14] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/2">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:41:14] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 16:41:14] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/4">模板语法使用</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;"><h4>问题：</h4>
<p>在django框架里正常的写img路径来显示图片显示不成功。</p>

<p>解决方法：</p>

<p>在setting.py最后一行加上以下代码</p>

<pre>STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)</pre>

<p>main.html源码：</p>

<pre>{% load static %}
   &lt;div class="main-main"&gt;
   &lt;div&gt;
      &lt;img src="{% static 'images/mainBg.png' %}" alt=""&gt;
   &lt;/div&gt;
   &lt;/div&gt;</pre>

<p>效果图：图片显示成功</p>

<p><img alt="" class="has" height="809" src="https://img-blog.csdnimg.cn/20190904111005215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhdGVyX1BvcGNvcm4=,size_16,color_FFFFFF,t_70" width="1200"></p>

<p>&nbsp;</p>

<p>&nbsp;</p></div><i></i></li>
[11/May/2020 16:41:14] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/5">ajax异步提交表单数据</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">采用ajax异步方式，通过js获取form中所有input、select等组件的值，将这些值组成Json格式，通过异步的方式与服务器端进行交互，
一般将表单数据传送给服务器端，服务器端处理数据并返回结果信息等<br>
var params = {"name", $("#name").val()} 
 $.ajax({
      type: "POST",
      url: "/url.do",
      data: params,
      dataType : "json",
      success: function(respMsg){
      }
   });</div><i></i></li>
[11/May/2020 16:41:14] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/6">自定义 Django 中的认证机制</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">指定身份认证后端
在幕后，Django 维护着一个 “身份认证后端” 列表，用于检查身份认证。当有人调用 django.contrib.auth.authenticate() 时，Django 尝试在所有身份验证后端进行身份验证。如果第一个验证方法失败，Django 会尝试第二个验证方法，依此类推，直到尝试完所有后端。

在 AUTHENTICATION_BACKENDS setting 中指定要使用的身份验证后端列表。这应该是一个 Python 路径名列表，指向知道如何进行身份验证的 Python 类。这些类可以在你的 Python 路径上的任何地方。</div><i></i></li>
[11/May/2020 16:41:19] [views.py] [line:89] INFO 
 /searchArticles()
在线 2 1
[11/May/2020 16:41:19] [views.py] [line:39] INFO 
 page_def()
[1] 1 ---- [1] 2 s==============
<a href="javascript:" class="pageginator page-item" style="color:blue;" page="1">第1页</a>
[11/May/2020 16:41:19] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/3">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
[11/May/2020 16:41:19] [views.py] [line:104] INFO 
 <li> <h3 id="a_title"><a href="/artileDetail/7">在线切图</a></h3><div id="a_content" style="overflow:hidden;max-height:100px;">操作步骤很简单，把你切好的ios切图，把一些需要变成.9png的图片导进来即可自动生成。<br>1、drawable-hdpi<br>2、drawable-mhdpi<br>3、drawable-xhdpi<br>4、drawable-xxhdpi  等4个不同dpi的文件。右边还可以预览效果。非常方便！<br>也是一个简单易学的.9png的切图工具。让新手快速掌握android设计切图。<br>在线自动生成.9png图网址：<br>http://romannurik.github.io/AndroidAssetStudio/nine-patches.html</div><i></i></li>
